/**
 * Attest.ink - Content Attribution Badge System
 * Simple JavaScript library for adding attribution badges to content
 */

const AttestInk = (function() {
    // Badge URLs - update these to your actual GitHub Pages URLs
    const badges = {
        human: 'assets/badges/human-generated.svg',
        ai: 'assets/badges/ai-generated.svg'
    };

    // Add a badge to a specified element with animation
    function addBadge(type, selector) {
        if (!badges[type]) {
            console.error(`Invalid badge type: ${type}. Use 'human' or 'ai'.`);
            return;
        }

        const elements = document.querySelectorAll(selector);
        if (elements.length === 0) {
            console.error(`No elements found matching selector: ${selector}`);
            return;
        }

        elements.forEach(element => {
            // Don't add if badge already exists
            if (element.querySelector('.attest-badge-container')) {
                return;
            }

            // Set position relative if not already set
            const computedStyle = window.getComputedStyle(element);
            if (computedStyle.position === 'static') {
                element.style.position = 'relative';
            }

            const badgeContainer = document.createElement('div');
            badgeContainer.className = 'attest-badge-container';
            badgeContainer.style.position = 'absolute';
            badgeContainer.style.top = '-15px';
            badgeContainer.style.right = '10px';
            badgeContainer.style.zIndex = '100';
            badgeContainer.style.opacity = '0';
            badgeContainer.style.transform = 'translateY(10px)';
            badgeContainer.style.transition = 'opacity 0.3s ease, transform 0.3s ease';

            const badgeImg = document.createElement('img');
            badgeImg.src = badges[type];
            badgeImg.alt = type === 'human' ? 'Human Generated' : 'AI Generated';
            badgeImg.className = 'attest-badge';
            badgeImg.style.height = '30px';
            badgeImg.style.display = 'block';
            badgeImg.style.filter = 'drop-shadow(0 2px 3px rgba(0, 0, 0, 0.1))';

            badgeContainer.appendChild(badgeImg);
            element.appendChild(badgeContainer);
            
            // Trigger animation after a small delay
            setTimeout(() => {
                badgeContainer.style.opacity = '1';
                badgeContainer.style.transform = 'translateY(0)';
            }, 50);
        });
    }

    // Remove badge from element with animation
    function removeBadge(selector) {
        const elements = document.querySelectorAll(selector);
        
        elements.forEach(element => {
            const badgeContainer = element.querySelector('.attest-badge-container');
            if (badgeContainer) {
                // Animate out
                badgeContainer.style.opacity = '0';
                badgeContainer.style.transform = 'translateY(10px)';
                
                // Remove after animation completes
                setTimeout(() => {
                    badgeContainer.remove();
                }, 300);
            }
        });
    }

    // Public API
    return {
        addBadge,
        removeBadge,
        getBadgeUrl: type => badges[type]
    };
})();